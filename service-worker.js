"use strict";var precacheConfig=[["/2020/11/19/markdown/index.html","72fa447798aa39d9fb49176d25e558d6"],["/2020/11/19/program-knowledge/index.html","0fb68200cdeea849c1e57c4255ea4d3f"],["/404.html","f3ae8de8af2f556de981b45ddaa8cd53"],["/about/index.html","da648ac0353731f021e95f627cafd09d"],["/archives/2020/11/index.html","1a9b23548f4a6031ea58ad7f12e1be24"],["/archives/2020/index.html","0301f2db096a3033f994ece004df3576"],["/archives/index.html","28077cfd32270b291da54cb852aadfaa"],["/categories/Program-Language/index.html","564d6beb3307521cb3e9c1fb4bd1df8f"],["/categories/index.html","445f6aac95599434acb9627de12e5110"],["/css/index.css","1afbff3d67ad16a053b10f707423c648"],["/css/var.css","d41d8cd98f00b204e9800998ecf8427e"],["/img/404.jpg","4ef3cfb882b6dd4128da4c8745e9a507"],["/img/algolia.svg","fd40b88ac5370a5353a50b8175c1f367"],["/img/favicon.png","7a8c47cb5a2149c1a1af21e90ecd9ca7"],["/img/friend_404.gif","68af0be9d22722e74665ef44dd532ba8"],["/img/header.jpg","d3e99942f9b3b452375a9ab9afab6965"],["/img/icp.png","6e26aed5ced63bc60524cc736611d39e"],["/img/loading.gif","d1cf8d9ccb6a2b3514a7d14332035a3c"],["/index.html","8cf6460a7e5e48b793d1ce423724fa01"],["/js/main.js","52314fb0e9dce0f5b6575be252fafd9e"],["/js/search/algolia.js","a5bdd8620fb116ed0f34d6c8d3c49068"],["/js/search/local-search.js","4c26a3269d8a157230a939d640eb316f"],["/js/tw_cn.js","4f73fc0d824183da7adbbee52d945816"],["/js/utils.js","67ae2162608e480f4f8ca3bc7d44f337"],["/link/index.html","ff3a4049d3ec9929cd87efff25765712"],["/tags/Markdown/index.html","b64b2b2bb4290d7bad54c1d92e51a4ba"],["/tags/index.html","abdfcca7e5cb05b88a0fd0b5366bbaad"],["/tags/编程基础/index.html","189136a7ccd2b907678e66fc177f17a2"]],cacheName="sw-precache-v3--"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){e=new URL(e);return"/"===e.pathname.slice(-1)&&(e.pathname+=a),e.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,n,t){e=new URL(e);return t&&e.pathname.match(t)||(e.search+=(e.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(n)),e.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var n=new URL(a).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){e=new URL(e);return e.hash="",e.search=e.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return n.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),e.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],e=e[1],a=new URL(a,self.location),e=createCacheKey(a,hashParamName,e,!1);return[a.toString(),e]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(t){return setOfCachedUrls(t).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!n.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return t.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){var n,e,t;"GET"===a.request.method&&(n=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),t="index.html",(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,t),e=urlsToCacheKeys.has(n)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)})))});